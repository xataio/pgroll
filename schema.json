{
  "$id": "https://raw.githubusercontent.com/xataio/pgroll/main/schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "JSON Schema for pgroll migrations",
  "description": "This JSON schema defines the structure and properties of pgroll migrations.",
  "allOf": [{ "$ref": "#/$defs/PgRollMigration" }],
  "$defs": {
    "CheckConstraint": {
      "additionalProperties": false,
      "description": "Check constraint definition",
      "properties": {
        "constraint": {
          "description": "Constraint expression",
          "type": "string"
        },
        "name": {
          "description": "Name of check constraint",
          "type": "string"
        },
        "no_inherit": {
          "description": "Do not propagate constraint to child tables",
          "type": "boolean",
          "default": false
        }
      },
      "required": ["constraint", "name"],
      "type": "object"
    },
    "Column": {
      "additionalProperties": false,
      "description": "Column definition",
      "properties": {
        "check": {
          "$ref": "#/$defs/CheckConstraint",
          "description": "Check constraint for the column"
        },
        "default": {
          "description": "Default value for the column",
          "type": "string"
        },
        "name": {
          "description": "Name of the column",
          "type": "string"
        },
        "nullable": {
          "description": "Indicates if the column is nullable",
          "type": "boolean",
          "default": false
        },
        "pk": {
          "description": "Indicates if the column is part of the primary key",
          "type": "boolean",
          "default": false
        },
        "references": {
          "$ref": "#/$defs/ForeignKeyReference",
          "description": "Foreign key constraint for the column"
        },
        "type": {
          "description": "Postgres type of the column",
          "type": "string"
        },
        "unique": {
          "description": "Indicates if the column values must be unique",
          "type": "boolean",
          "default": false
        },
        "comment": {
          "description": "Postgres comment for the column",
          "type": "string"
        },
        "generated": {
          "description": "Generated column definition",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "expression": {
              "description": "Generation expression of the column",
              "type": "string",
              "default": ""
            },
            "identity": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "sequence_options": {
                  "description": "Sequence options for identity column, same as in CREATE SEQUENCE",
                  "type": "string",
                  "default": ""
                },
                "user_specified_values": {
                  "type": "string",
                  "description": "How to handle user specified values for identity column in INSERT and UPDATE statements",
                  "enum": ["ALWAYS", "BY DEFAULT"],
                  "default": "ALWAYS"
                }
              }
            }
          }
        }
      },
      "required": ["name", "type"],
      "type": "object"
    },
    "ForeignKeyReference": {
      "additionalProperties": false,
      "description": "Foreign key reference definition",
      "properties": {
        "column": {
          "description": "Name of the referenced column",
          "type": "string"
        },
        "name": {
          "description": "Name of the foreign key constraint",
          "type": "string"
        },
        "table": {
          "description": "Name of the referenced table",
          "type": "string"
        },
        "match_type": {
          "description": "Match type of the foreign key constraint",
          "$ref": "#/$defs/ForeignKeyMatchType",
          "default": "SIMPLE"
        },
        "on_delete": {
          "description": "On delete behavior of the foreign key constraint",
          "$ref": "#/$defs/ForeignKeyAction",
          "default": "NO ACTION"
        },
        "on_update": {
          "description": "On update behavior of the foreign key constraint",
          "$ref": "#/$defs/ForeignKeyAction",
          "default": "NO ACTION"
        },
        "deferrable": {
          "description": "Deferable constraint",
          "type": "boolean",
          "default": false
        },
        "initially_deferred": {
          "description": "Initially deferred constraint",
          "type": "boolean",
          "default": false
        }
      },
      "required": ["column", "name", "table"],
      "type": "object"
    },
    "TableForeignKeyReference": {
      "additionalProperties": false,
      "description": "Table level foreign key reference definition",
      "properties": {
        "table": {
          "description": "Name of the table",
          "type": "string"
        },
        "columns": {
          "description": "Columns to reference",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "match_type": {
          "description": "Match type of the foreign key constraint",
          "$ref": "#/$defs/ForeignKeyMatchType",
          "default": "SIMPLE"
        },
        "on_update": {
          "description": "On update behavior of the foreign key constraint",
          "$ref": "#/$defs/ForeignKeyAction",
          "default": "NO ACTION"
        },
        "on_delete": {
          "description": "On delete behavior of the foreign key constraint",
          "$ref": "#/$defs/ForeignKeyAction",
          "default": "NO ACTION"
        },
        "on_delete_set_columns": {
          "description": "Columns to set to null or to default on delete",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["table", "columns"],
      "type": "object"
    },
    "ForeignKeyAction": {
      "description": "On delete behavior of the foreign key constraint",
      "type": "string",
      "enum": ["NO ACTION", "RESTRICT", "CASCADE", "SET NULL", "SET DEFAULT"]
    },
    "ForeignKeyMatchType": {
      "description": "Match type of the foreign key constraint",
      "type": "string",
      "enum": ["SIMPLE", "FULL", "PARTIAL"]
    },
    "Constraint": {
      "additionalProperties": false,
      "description": "Constraint definition",
      "properties": {
        "name": {
          "description": "Name of the constraint",
          "type": "string"
        },
        "columns": {
          "description": "Columns to add constraint to",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "description": "Type of the constraint",
          "type": "string",
          "enum": ["unique", "check", "primary_key", "foreign_key", "exclude"]
        },
        "deferrable": {
          "description": "Deferable constraint",
          "type": "boolean",
          "default": false
        },
        "initially_deferred": {
          "description": "Initially deferred constraint",
          "type": "boolean",
          "default": false
        },
        "nulls_not_distinct": {
          "description": "Nulls not distinct constraint",
          "type": "boolean",
          "default": false
        },
        "no_inherit": {
          "description": "Do not propagate constraint to child tables",
          "type": "boolean",
          "default": false
        },
        "check": {
          "description": "Check constraint expression",
          "type": "string",
          "default": ""
        },
        "references": {
          "description": "Reference to the foreign key",
          "$ref": "#/$defs/TableForeignKeyReference"
        },
        "exclude": {
          "type": "object",
          "additionalProperties": false,
          "description": "Exclude constraint definition",
          "properties": {
            "index_method": {
              "description": "Index method",
              "type": "string",
              "default": ""
            },
            "elements": {
              "type": "string",
              "default": "",
              "description": "Expressions of the exclude constraint"
            },
            "predicate": {
              "type": "string",
              "description": "Predicate for the exclusion constraint",
              "default": ""
            }
          }
        },
        "index_parameters": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "tablespace": {
              "type": "string",
              "default": ""
            },
            "storage_parameters": {
              "type": "string",
              "default": ""
            },
            "include_columns": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "unique"
              }
            }
          },
          "then": {
            "properties": {
              "check": {
                "const": ""
              },
              "no_inherit": {
                "const": false
              }
            },
            "required": ["columns"]
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "check"
              }
            }
          },
          "then": {
            "properties": {
              "check": {
                "type": "string"
              },
              "index_parameters": {
                "const": {}
              },
              "deferrable": {
                "const": false
              },
              "initially_deferred": {
                "const": false
              },
              "nulls_not_distinct": {
                "const": false
              }
            },
            "required": ["check"]
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "primary_key"
              }
            }
          },
          "then": {
            "properties": {
              "check": {
                "const": ""
              },
              "no_inherit": {
                "const": false
              },
              "nulls_not_distinct": {
                "const": false
              }
            },
            "required": ["columns"]
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "foreign_key"
              }
            }
          },
          "then": {
            "properties": {
              "check": {
                "const": ""
              },
              "index_parameters": {
                "const": {}
              },
              "no_inherit": {
                "const": false
              },
              "nulls_not_distinct": {
                "const": false
              }
            },
            "required": ["columns", "references"]
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "exclude"
              }
            }
          },
          "then": {
            "properties": {
              "check": {
                "const": ""
              },
              "no_inherit": {
                "const": false
              },
              "nulls_not_distinct": {
                "const": false
              },
              "columns": {
                "const": []
              }
            },
            "required": ["exclude"]
          }
        }
      ],
      "required": ["name", "type"],
      "type": "object"
    },
    "IndexField": {
      "additionalProperties": false,
      "description": "Index field and its settings",
      "type": "object",
      "properties": {
        "collate": {
          "type": "string",
          "description": "Collation for the index element",
          "default": ""
        },
        "sort": {
          "description": "Sort order, default is ascending (ASC)",
          "type": "string",
          "enum": ["ASC", "DESC"],
          "default": ""
        },
        "opclass": {
          "type": "object",
          "description": "Operator class settings",
          "additionalProperties": false,
          "properties": {
            "name": {
              "description": "Name of the operator class",
              "type": "string",
              "default": ""
            },
            "params": {
              "description": "Operator class parameters",
              "type": "array",
              "additionalProperties": true,
              "items": {
                "type": "string"
              }
            }
          }
        },
        "nulls": {
          "type": "string",
          "description": "Nulls ordering, default is first if ascending, last if descending",
          "enum": ["FIRST", "LAST"]
        }
      }
    },
    "OpAddColumn": {
      "additionalProperties": false,
      "description": "Add column operation",
      "properties": {
        "column": {
          "$ref": "#/$defs/Column",
          "description": "Column to add"
        },
        "table": {
          "description": "Name of the table",
          "type": "string"
        },
        "up": {
          "default": "",
          "description": "SQL expression for up migration",
          "type": "string"
        }
      },
      "required": ["column", "table"],
      "type": "object"
    },
    "OpRenameColumn": {
      "additionalProperties": false,
      "description": "Rename column operation",
      "properties": {
        "table": {
          "description": "Name of the table",
          "type": "string"
        },
        "from": {
          "description": "Old name of the column",
          "type": "string"
        },
        "to": {
          "description": "New name of the column",
          "type": "string"
        }
      },
      "required": ["table", "from", "to"],
      "type": "object"
    },
    "OpAlterColumn": {
      "additionalProperties": false,
      "description": "Alter column operation",
      "properties": {
        "check": {
          "$ref": "#/$defs/CheckConstraint",
          "description": "Add check constraint to the column"
        },
        "column": {
          "description": "Name of the column",
          "type": "string"
        },
        "down": {
          "default": "",
          "description": "SQL expression for down migration",
          "type": "string"
        },
        "default": {
          "description": "Default value of the column. Setting to null will drop the default if it was set previously.",
          "type": ["string", "null"],
          "goJSONSchema": {
            "imports": ["github.com/oapi-codegen/nullable"],
            "nillable": true,
            "type": "nullable.Nullable[string]"
          }
        },
        "nullable": {
          "description": "Indicates if the column is nullable (for add/remove not null constraint operation)",
          "type": "boolean"
        },
        "references": {
          "$ref": "#/$defs/ForeignKeyReference",
          "description": "Add foreign key constraint to the column"
        },
        "table": {
          "description": "Name of the table",
          "type": "string"
        },
        "type": {
          "description": "New type of the column (for change type operation)",
          "type": "string"
        },
        "unique": {
          "$ref": "#/$defs/UniqueConstraint",
          "description": "Add unique constraint to the column"
        },
        "comment": {
          "description": "New comment on the column",
          "type": ["string", "null"],
          "goJSONSchema": {
            "imports": ["github.com/oapi-codegen/nullable"],
            "nillable": true,
            "type": "nullable.Nullable[string]"
          }
        },
        "up": {
          "default": "",
          "description": "SQL expression for up migration",
          "type": "string"
        }
      },
      "required": ["table", "column", "up", "down"],
      "anyOf": [
        { "required": ["check"] },
        { "required": ["type"] },
        { "required": ["nullable"] },
        { "required": ["default"] },
        { "required": ["comment"] },
        { "required": ["unique"] },
        { "required": ["references"] }
      ],
      "type": "object"
    },
    "OpCreateIndex": {
      "additionalProperties": false,
      "description": "Create index operation",
      "properties": {
        "columns": {
          "description": "Names and settings of columns on which to define the index",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/IndexField",
            "description": "Index field settings"
          }
        },
        "name": {
          "description": "Index name",
          "type": "string"
        },
        "table": {
          "description": "Name of table on which to define the index",
          "type": "string"
        },
        "predicate": {
          "description": "Conditional expression for defining a partial index",
          "type": "string",
          "default": ""
        },
        "method": {
          "description": "Index method to use for the index: btree, hash, gist, spgist, gin, brin",
          "type": "string",
          "enum": ["btree", "hash", "gist", "spgist", "gin", "brin"],
          "default": "btree"
        },
        "storage_parameters": {
          "description": "Storage parameters for the index",
          "type": "string",
          "default": ""
        },
        "unique": {
          "description": "Indicates if the index is unique",
          "type": "boolean",
          "default": false
        }
      },
      "required": ["columns", "name", "table"],
      "type": "object"
    },
    "OpCreateTable": {
      "additionalProperties": false,
      "description": "Create table operation",
      "properties": {
        "columns": {
          "items": {
            "$ref": "#/$defs/Column",
            "description": "Columns to add to the table"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of the table",
          "type": "string"
        },
        "comment": {
          "description": "Postgres comment for the table",
          "type": "string"
        },
        "constraints": {
          "items": {
            "$ref": "#/$defs/Constraint",
            "description": "Constraints to add to the table"
          },
          "type": "array"
        }
      },
      "required": ["columns", "name"],
      "type": "object"
    },
    "OpDropColumn": {
      "additionalProperties": false,
      "description": "Drop column operation",
      "properties": {
        "column": {
          "description": "Name of the column",
          "type": "string"
        },
        "down": {
          "default": "",
          "description": "SQL expression for down migration",
          "type": "string"
        },
        "table": {
          "description": "Name of the table",
          "type": "string"
        }
      },
      "required": ["column", "table"],
      "type": "object"
    },
    "OpDropConstraint": {
      "additionalProperties": false,
      "description": "Drop constraint operation",
      "properties": {
        "down": {
          "default": "",
          "description": "SQL expression for down migration",
          "type": "string"
        },
        "name": {
          "description": "Name of the constraint",
          "type": "string"
        },
        "table": {
          "description": "Name of the table",
          "type": "string"
        },
        "up": {
          "description": "SQL expression for up migration",
          "type": "string"
        }
      },
      "required": ["down", "name", "table", "up"],
      "type": "object"
    },
    "OpDropIndex": {
      "additionalProperties": false,
      "description": "Drop index operation",
      "properties": {
        "name": {
          "description": "Index name",
          "type": "string"
        }
      },
      "required": ["name"],
      "type": "object"
    },
    "OpDropTable": {
      "additionalProperties": false,
      "description": "Drop table operation",
      "properties": {
        "name": {
          "description": "Name of the table",
          "type": "string"
        }
      },
      "required": ["name"],
      "type": "object"
    },
    "OpRawSQL": {
      "additionalProperties": false,
      "description": "Raw SQL operation",
      "properties": {
        "down": {
          "default": "",
          "description": "SQL expression for down migration",
          "type": "string"
        },
        "up": {
          "description": "SQL expression for up migration",
          "type": "string"
        },
        "onComplete": {
          "description": "SQL expression will run on complete step (rather than on start)",
          "type": "boolean",
          "default": false
        }
      },
      "required": ["up"],
      "oneOf": [
        {
          "required": ["down"]
        },
        {
          "required": ["onComplete"]
        },
        {
          "not": {
            "anyOf": [
              {
                "required": ["down"]
              },
              {
                "required": ["onComplete"]
              }
            ]
          }
        }
      ],
      "type": "object"
    },
    "OpRenameConstraint": {
      "additionalProperties": false,
      "description": "Rename constraint operation",
      "properties": {
        "from": {
          "description": "Name of the constraint",
          "type": "string"
        },
        "to": {
          "description": "New name of the constraint",
          "type": "string"
        },
        "table": {
          "description": "Name of the table",
          "type": "string"
        }
      },
      "required": ["from", "to", "table"],
      "type": "object"
    },
    "OpRenameTable": {
      "additionalProperties": false,
      "description": "Rename table operation",
      "properties": {
        "from": {
          "description": "Old name of the table",
          "type": "string"
        },
        "to": {
          "description": "New name of the table",
          "type": "string"
        }
      },
      "required": ["from", "to"],
      "type": "object"
    },
    "OpSetReplicaIdentity": {
      "additionalProperties": false,
      "description": "Set replica identity operation",
      "properties": {
        "identity": {
          "$ref": "#/$defs/ReplicaIdentity",
          "description": "Replica identity to set"
        },
        "table": {
          "description": "Name of the table",
          "type": "string"
        }
      },
      "required": ["identity", "table"],
      "type": "object"
    },
    "OpCreateConstraint": {
      "additionalProperties": false,
      "description": "Add constraint to table operation",
      "properties": {
        "table": {
          "description": "Name of the table",
          "type": "string"
        },
        "name": {
          "description": "Name of the constraint",
          "type": "string"
        },
        "columns": {
          "description": "Columns to add constraint to",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "description": "Type of the constraint",
          "type": "string",
          "enum": ["unique", "check", "foreign_key", "primary_key"]
        },
        "check": {
          "description": "Check constraint expression",
          "type": "string"
        },
        "no_inherit": {
          "description": "Do not propagate constraint to child tables",
          "type": "boolean",
          "default": false
        },
        "index_parameters": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "tablespace": {
              "type": "string",
              "default": ""
            },
            "storage_parameters": {
              "type": "string",
              "default": ""
            },
            "include_columns": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "references": {
          "description": "Reference to the foreign key",
          "$ref": "#/$defs/TableForeignKeyReference"
        },
        "up": {
          "description": "SQL expressions for up migrations",
          "$ref": "#/$defs/MultiColumnUpSQL"
        },
        "down": {
          "description": "SQL expressions for down migrations",
          "$ref": "#/$defs/MultiColumnDownSQL"
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "foreign_key"
              }
            }
          },
          "then": {
            "properties": {
              "check": {
                "const": ""
              },
              "no_inherit": {
                "const": false
              },
              "index_params": {
                "const": {}
              }
            },
            "required": ["columns", "references"]
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "check"
              }
            }
          },
          "then": {
            "properties": {
              "check": {
                "type": "string"
              },
              "references": {
                "const": {}
              },
              "index_params": {
                "const": {}
              }
            },
            "required": ["check"]
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "primary_key"
              }
            }
          },
          "then": {
            "properties": {
              "check": {
                "const": ""
              },
              "no_inherit": {
                "const": false
              },
              "references": {
                "const": {}
              }
            },
            "required": ["columns"]
          }
        }
      ],
      "required": ["name", "table", "type", "up", "down"],
      "type": "object"
    },
    "OpDropMultiColumnConstraint": {
      "additionalProperties": false,
      "description": "Drop multi-column constraint operation",
      "properties": {
        "table": {
          "description": "Name of the table",
          "type": "string"
        },
        "name": {
          "description": "Name of the constraint",
          "type": "string"
        },
        "up": {
          "description": "SQL expressions for up migrations",
          "$ref": "#/$defs/MultiColumnUpSQL"
        },
        "down": {
          "description": "SQL expressions for down migrations",
          "$ref": "#/$defs/MultiColumnDownSQL"
        }
      },
      "required": ["name", "table", "down"],
      "type": "object"
    },
    "PgRollOperation": {
      "anyOf": [
        {
          "type": "object",
          "description": "Add column operation",
          "additionalProperties": false,
          "properties": {
            "add_column": {
              "$ref": "#/$defs/OpAddColumn"
            }
          },
          "required": ["add_column"]
        },
        {
          "type": "object",
          "description": "Alter column operation",
          "additionalProperties": false,
          "properties": {
            "alter_column": {
              "$ref": "#/$defs/OpAlterColumn"
            }
          },
          "required": ["alter_column"]
        },
        {
          "type": "object",
          "description": "Rename column operation",
          "additionalProperties": false,
          "properties": {
            "rename_column": {
              "$ref": "#/$defs/OpRenameColumn"
            }
          },
          "required": ["rename_column"]
        },
        {
          "type": "object",
          "description": "Create index operation",
          "additionalProperties": false,
          "properties": {
            "create_index": {
              "$ref": "#/$defs/OpCreateIndex"
            }
          },
          "required": ["create_index"]
        },
        {
          "type": "object",
          "description": "Create table operation",
          "additionalProperties": false,
          "properties": {
            "create_table": {
              "$ref": "#/$defs/OpCreateTable"
            }
          },
          "required": ["create_table"]
        },
        {
          "type": "object",
          "description": "Drop column operation",
          "additionalProperties": false,
          "properties": {
            "drop_column": {
              "$ref": "#/$defs/OpDropColumn"
            }
          },
          "required": ["drop_column"]
        },
        {
          "type": "object",
          "description": "Drop constraint operation",
          "additionalProperties": false,
          "properties": {
            "drop_constraint": {
              "$ref": "#/$defs/OpDropConstraint"
            }
          },
          "required": ["drop_constraint"]
        },
        {
          "type": "object",
          "description": "Drop multi-column constraint operation",
          "additionalProperties": false,
          "properties": {
            "drop_multicolumn_constraint": {
              "$ref": "#/$defs/OpDropMultiColumnConstraint"
            }
          },
          "required": ["drop_multicolumn_constraint"]
        },
        {
          "type": "object",
          "description": "Rename constraint operation",
          "additionalProperties": false,
          "properties": {
            "rename_constraint": {
              "$ref": "#/$defs/OpRenameConstraint"
            }
          },
          "required": ["rename_constraint"]
        },
        {
          "type": "object",
          "description": "Drop index operation",
          "additionalProperties": false,
          "properties": {
            "drop_index": {
              "$ref": "#/$defs/OpDropIndex"
            }
          },
          "required": ["drop_index"]
        },
        {
          "type": "object",
          "description": "Drop table operation",
          "additionalProperties": false,
          "properties": {
            "drop_table": {
              "$ref": "#/$defs/OpDropTable"
            }
          },
          "required": ["drop_table"]
        },
        {
          "type": "object",
          "description": "Raw SQL operation",
          "additionalProperties": false,
          "properties": {
            "sql": {
              "$ref": "#/$defs/OpRawSQL"
            }
          },
          "required": ["sql"]
        },
        {
          "type": "object",
          "description": "Rename table operation",
          "additionalProperties": false,
          "properties": {
            "rename_table": {
              "$ref": "#/$defs/OpRenameTable"
            }
          },
          "required": ["rename_table"]
        },
        {
          "type": "object",
          "description": "Set replica identity operation",
          "additionalProperties": false,
          "properties": {
            "set_replica_identity": {
              "$ref": "#/$defs/OpSetReplicaIdentity"
            }
          },
          "required": ["set_replica_identity"]
        },
        {
          "type": "object",
          "description": "Add constraint operation",
          "additionalProperties": false,
          "properties": {
            "create_constraint": {
              "$ref": "#/$defs/OpCreateConstraint"
            }
          },
          "required": ["create_constraint"]
        }
      ]
    },
    "PgRollOperations": {
      "items": {
        "$ref": "#/$defs/PgRollOperation"
      },
      "type": "array"
    },
    "PgRollMigration": {
      "additionalProperties": false,
      "description": "PgRoll migration definition",
      "properties": {
        "name": {
          "description": "Name of the migration",
          "type": "string"
        },
        "version_schema": {
          "description": "Name of the version schema to use for this migration",
          "type": "string"
        },
        "operations": {
          "$ref": "#/$defs/PgRollOperations"
        }
      },
      "required": ["operations"],
      "type": "object"
    },
    "ReplicaIdentity": {
      "additionalProperties": false,
      "description": "Replica identity definition",
      "properties": {
        "index": {
          "description": "Name of the index to use as replica identity",
          "type": "string"
        },
        "type": {
          "description": "Type of replica identity",
          "type": "string"
        }
      },
      "required": ["index", "type"],
      "type": "object"
    },
    "UniqueConstraint": {
      "additionalProperties": false,
      "description": "Unique constraint definition",
      "properties": {
        "name": {
          "description": "Name of unique constraint",
          "type": "string"
        }
      },
      "required": ["name"],
      "type": "object"
    },
    "MultiColumnUpSQL": {
      "type": "object",
      "additionalProperties": { "type": "string" },
      "description": "Map of column names to up SQL expressions"
    },
    "MultiColumnDownSQL": {
      "type": "object",
      "additionalProperties": { "type": "string" },
      "description": "Map of column names to down SQL expressions"
    }
  }
}
